name: Seed Forecast Accuracy

on:
  schedule:
    - cron: '10 1 * * *'        # ~10 mins after retrain
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: seed-accuracy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  seed-accuracy-db:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Sanity check
        run: |
          echo "CWD: $(pwd)"
          ls -la
          if [ -f forecast_metrics.csv ]; then
            echo "✅ forecast_metrics.csv found:"
            head -n 5 forecast_metrics.csv || true
          else
            echo "⚠️ forecast_metrics.csv not found; nothing to seed. Exiting 0."
            exit 0
          fi

      - name: Build/Update forecast_accuracy.db (inline)
        run: |
          set -euxo pipefail
          python - <<'PY'
          import os, sqlite3, pandas as pd, datetime as dt, pathlib, sys
          root = pathlib.Path(os.getcwd())
          csv_path = root / "forecast_metrics.csv"
          if not csv_path.exists():
              print("No CSV; nothing to do."); sys.exit(0)
          df = pd.read_csv(csv_path)
          if df.empty:
              print("Empty CSV; nothing to seed."); sys.exit(0)
          # Add an ingestion timestamp
          if "ingested_at" not in df.columns:
              df["ingested_at"] = dt.datetime.utcnow().isoformat(timespec="seconds") + "Z"
          db_path = root / "forecast_accuracy.db"
          con = sqlite3.connect(db_path)
          # Write/replace a simple table named 'metrics'
          df.to_sql("metrics", con, if_exists="replace", index=False)
          con.commit(); con.close()
          print(f"✅ Wrote {len(df)} rows to {db_path}")
          PY
          test -s forecast_accuracy.db

      - name: Commit & push seeded DB
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add forecast_accuracy.db
          git commit -m "Nightly: update forecast_accuracy.db ($(date -u +'%Y-%m-%d'))" || echo "No changes to commit"
          git push
