name: Seed Forecast Accuracy

on:
  schedule:
    - cron: '10 1 * * *'        # ~10 mins after retrain
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: seed-accuracy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  seed-accuracy-db:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Sanity check paths
        run: |
          echo "CWD: $(pwd)"
          echo "Top-level:"
          ls -la
          echo "forecast_eval/:"
          ls -la forecast_eval || true
          echo "CSV at repo root?"
          test -f forecast_metrics.csv && echo "✅ found" || echo "❌ missing"

      - name: Show seed_db.py header & help
        working-directory: forecast_eval
        run: |
          sed -n '1,140p' seed_db.py || true
          echo "---- seed_db.py --help ----"
          python -u seed_db.py --help || true
          echo "---------------------------"

      - name: Seed accuracy DB (auto-detect flags)
        working-directory: forecast_eval
        run: |
          set -euo pipefail
          CSV="../forecast_metrics.csv"
          OUT="forecast_accuracy.db"

          # If metrics CSV isn't present yet, don't fail the pipeline
          if [ ! -f "$CSV" ]; then
            echo "No $CSV found; nothing to seed. Exiting cleanly."
            exit 0
          fi

          # Detect possible input/output flags from argparse declarations
          IN_FLAG=""
          OUT_FLAG=""
          grep -q -- "--csv"     seed_db.py && IN_FLAG="--csv"
          [ -z "${IN_FLAG}" ] && grep -q -- "--metrics" seed_db.py && IN_FLAG="--metrics"
          [ -z "${IN_FLAG}" ] && grep -q -- "--input"   seed_db.py && IN_FLAG="--input"

          grep -q -- "--out"     seed_db.py && OUT_FLAG="--out"
          [ -z "${OUT_FLAG}" ] && grep -q -- "--db"       seed_db.py && OUT_FLAG="--db"
          [ -z "${OUT_FLAG}" ] && grep -q -- "--output"   seed_db.py && OUT_FLAG="--output"
          [ -z "${OUT_FLAG}" ] && grep -q -- "--db-path"  seed_db.py && OUT_FLAG="--db-path"

          echo "Detected flags: IN='${IN_FLAG:-positional}' OUT='${OUT_FLAG:-positional}'"

          set +e
          if [ -n "$IN_FLAG" ] && [ -n "$OUT_FLAG" ]; then
            python -u seed_db.py "$IN_FLAG" "$CSV" "$OUT_FLAG" "$OUT"
            code=$?
          elif [ -n "$IN_FLAG" ]; then
            python -u seed_db.py "$IN_FLAG" "$CSV"
            code=$?
          else
            python -u seed_db.py "$CSV" "$OUT"
            code=$?
          fi
          set -e
          echo "seed_db.py exit code: $code"

          # If the call failed, but DB exists, continue; otherwise fail
          if [ $code -ne 0 ] && [ ! -f "$OUT" ]; then
            echo "Seeding failed and no DB produced."
            exit $code
          fi

          # Ensure DB exists before continuing
          test -f "$OUT" && echo "✅ Produced $OUT"

      - name: Move DB to repo root
        working-directory: forecast_eval
        run: mv -f forecast_accuracy.db ..

      - name: Commit & push seeded DB
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add forecast_accuracy.db
          git commit -m "Nightly: update forecast_accuracy.db ($(date -u +'%Y-%m-%d'))" || echo "No changes to commit"
          git push
